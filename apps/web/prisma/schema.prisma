// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// Modelo de Usuario
model User {
  id            String    @id @default(cuid())
  email         String    @unique
  emailVerified DateTime?
  name          String?
  image         String?
  role          String    @default("inspector")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // Para login tradicional (opcional)
  password      String?

  // Relaciones para NextAuth
  accounts      Account[]
  sessions      Session[]

  // Relaciones de negocio
  inspections   Inspection[]
}

// Modelos para NextAuth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Modelo de Propiedad
model Property {
  id          String   @id @default(cuid())
  name        String
  address     String
  owner       String
  type        String   // Residencial, Comercial, Industrial
  status      String   @default("active") // active, archived
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relaciones
  inspections Inspection[]
  budgets     Budget[]
}

// Modelo de Inspecci√≥n
model Inspection {
  id         String   @id @default(cuid())
  code       String   @unique
  name       String
  status     String   @default("scheduled") // scheduled, in-progress, completed
  progress   Int      @default(0)
  date       DateTime
  comments   String?
  clientName String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relaciones
  propertyId String
  property   Property @relation(fields: [propertyId], references: [id])
  
  inspectorId String
  inspector   User     @relation(fields: [inspectorId], references: [id])
}

// Modelo de Presupuesto
model Budget {
  id        String   @id @default(cuid())
  amount    Float
  status    String   @default("pending") // pending, approved, rejected
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  propertyId String
  property   Property @relation(fields: [propertyId], references: [id])
}